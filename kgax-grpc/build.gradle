/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.google.protobuf" version "0.8.5"
}

group 'com.google.kgax'
version '0.1.0'

apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'
apply plugin: 'jacoco'

repositories {
    google()
    mavenCentral()
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile project(':kgax-core')

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    compile 'io.grpc:grpc-okhttp:1.13.1'
    compile 'io.grpc:grpc-protobuf-lite:1.13.1'
    compile 'io.grpc:grpc-stub:1.13.1'
    compile 'io.grpc:grpc-auth:1.13.1'
    compile 'com.google.auth:google-auth-library-oauth2-http:0.9.1'
    compile 'com.google.auth:google-auth-library-credentials:0.9.1'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'
    testImplementation "com.google.truth:truth:0.41"

    ktlint "com.github.shyiko:ktlint:0.24.0"
}

archivesBaseName = 'kgax-grpc'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.10.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                grpc {
                    option 'lite'
                }
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += file("${protobuf.generatedFilesBaseDir}/main/grpc")
        }
    }
}

jar {
    exclude "**/*.proto"
}

jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    sourceDirectories = files([
            "src/main/kotlin"
    ])
}

check.dependsOn jacocoTestReport

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
